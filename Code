#include<iostream>
#include<vector>
using namespace std;

// Product Class to store product details
class Product {
public:
    int id;
    string name;
    int quantity;
    float price;

    // Constructor
    Product(int p_id, string p_name, int p_quantity, float p_price) {
        id = p_id;
        name = p_name;
        quantity = p_quantity;
        price = p_price;
    }

    // Function to display product details
    void displayProduct() {
        cout << "Product ID: " << id << endl;
        cout << "Product Name: " << name << endl;
        cout << "Quantity: " << quantity << endl;
        cout << "Price: " << price << endl;
    }
};

// Inventory Management System Class
class Inventory {
private:
    vector<Product> products;

public:
    // Add a product to inventory
    void addProduct(int id, string name, int quantity, float price) {
        Product newProduct(id, name, quantity, price);
        products.push_back(newProduct);
        cout << "Product added successfully!" << endl;
    }

    // View all products
    void viewProducts() {
        if (products.size() == 0) {
            cout << "No products in the inventory." << endl;
            return;
        }
        for (size_t i = 0; i < products.size(); ++i) {
            cout << "\nProduct " << i + 1 << " Details:" << endl;
            products[i].displayProduct();
        }
    }

    // Search for a product by ID
    void searchProduct(int id) {
        for (size_t i = 0; i < products.size(); ++i) {
            if (products[i].id == id) {
                cout << "Product found!" << endl;
                products[i].displayProduct();
                return;
            }
        }
        cout << "Product with ID " << id << " not found." << endl;
    }

    // Delete a product by ID
    void deleteProduct(int id) {
        for (size_t i = 0; i < products.size(); ++i) {
            if (products[i].id == id) {
                products.erase(products.begin() + i);
                cout << "Product with ID " << id << " deleted successfully!" << endl;
                return;
            }
        }
        cout << "Product with ID " << id << " not found." << endl;
    }
};

int main() {
    Inventory inv;
    int choice, id, quantity;
    string name;
    float price;

    do {
        cout << "\nInventory Management System Menu\n";
        cout << "1. Add Product\n";
        cout << "2. View All Products\n";
        cout << "3. Search Product by ID\n";
        cout << "4. Delete Product by ID\n";
        cout << "5. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                cout << "Enter Product ID: ";
                cin >> id;
                cout << "Enter Product Name: ";
                cin.ignore();
                getline(cin, name);
                cout << "Enter Quantity: ";
                cin >> quantity;
                cout << "Enter Price: ";
                cin >> price;
                inv.addProduct(id, name, quantity, price);
                break;

            case 2:
                inv.viewProducts();
                break;

            case 3:
                cout << "Enter Product ID to search: ";
                cin >> id;
                inv.searchProduct(id);
                break;

            case 4:
                cout << "Enter Product ID to delete: ";
                cin >> id;
                inv.deleteProduct(id);
                break;

            case 5:
                cout << "Exiting the system." << endl;
                break;

            default:
                cout << "Invalid choice! Please try again." << endl;
        }
    } while (choice != 5);

    return 0;
}
